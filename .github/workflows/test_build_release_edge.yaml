name: TestBuildDeployEdge

on: pull_request

jobs:
  lint-charms:
    name: "Lint and unit test the charms"
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: 'x64'
      - name: "Install tox"
        run: |
          pip install tox

      - name: "lint the charms"
        run: |
          make lint

#      - name: "run slurmd unit tests"
#        run: |
#          cd charm-slurmd/
#          make unit
#          cd ../
#
#      - name: "run slurmctld unit tests"
#        run: |
#          cd charm-slurmctld/
#          make unit
#          cd ../
#
#      - name: "run slurmdbd unit tests"
#        run: |
#          cd charm-slurmdbd/
#          make unit
#          cd ../
#
#      - name: "run slurmrestd unit tests"
#        run: |
#          cd charm-slurmrestd/
#          make unit
#          cd ../


  build-charms:
    name: "Build the charms"
    needs: lint-charms
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: "Install charmcraft"
        run: |
          sudo snap install charmcraft --channel=latest/stable --classic
      - name: "Install lxd"
        run: |
          sudo snap install lxd --channel=latest/stable
          sudo snap refresh lxd
      - name: "Configure lxd"
        run: |
          sudo groupadd --force --system lxd
          sudo usermod --append --groups lxd $USER
          newgrp lxd
          sudo snap start lxd
          sudo lxd waitready --timeout=30
          sudo lxd init --auto
      - name: "Build the charms"
        shell: bash
        run: |
          make version
          echo "charm version: $(cat version)"

          for charm in slurmd slurmctld slurmdbd slurmrestd; do
              sg lxd -c "charmcraft -v pack --project-dir charm-$charm"
              cp ${charm}_ubuntu-20.04-amd64_centos-7-amd64.charm ${charm}.charm
          done

          file *.charm

      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: "Get current date"
        id: vars
        run: echo "::set-output name=date::$(date +'%Y-%m-%d')"

      - name: "Tar and push charms to s3"
        shell: bash
        run: |
          tar czf charms.tar.gz slurmd.charm slurmctld.charm slurmdbd.charm slurmrestd.charm
          aws s3 cp charms.tar.gz s3://omnivector-public-assets/charms/edge/${{ steps.vars.outputs.date }}/

  notify:
    name: notify
    runs-on: ubuntu-latest
    needs: [build-charms]
    steps:
      - uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took # selectable (default: repo,message)
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always() # Pick up events even if the job fails or is canceled.
